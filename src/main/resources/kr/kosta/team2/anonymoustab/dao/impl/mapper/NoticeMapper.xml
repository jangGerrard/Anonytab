<?xml version="1.0" encoding="UTF-8"?>


<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD mapper 3.0/EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >



<mapper namespace="kr.kosta.team2.anonymoustab.dao.impl.mapper.NoticeMapper">

	<insert id="insertNoticeFriendRequest" parameterType="Notice">
		insert 
		into notice(
			id,
			friend_id,
			create_date,
			level
		) values (
			#{friendId},
			#{id},
			#{createDate},
			1
		)
	</insert>
	
	<insert id="insertNoticeArticleRegisterToFriend" parameterType="Notice">
		insert into notice(
			id,
			friend_id,
			no,
			create_date,
			level
		) values (
			#{friendId},
			#{id},
			#{no},
			#{createDate},
			#{level}
		)
	</insert>
	
	<insert id="insertNoticeLikeToFriend" parameterType="Notice">
		insert into notice(
			id,
			friend_id,
			no,
			create_date,
			level
		) values (
			#{friendId},
			#{id},
			#{no},
			#{createDate},
			#{level}
		)
	</insert>
	
	<insert id="insertNoticeTagToFriend" parameterType="Notice">
		insert into notice(
			id,
			friend_id,
			no,
			create_date,
			level
		) values (
			#{friendId},
			#{id},
			#{no},
			#{createDate},
			#{level}
		)
	</insert>
	
	<insert id="insertNoticeShareToFriend" parameterType="Notice">
		insert into notice(
			id,
			friend_id,
			no,
			create_date,
			level
		) values (
			#{friendId},
			#{id},
			#{no},
			#{createDate},
			#{level}
		)
	</insert>

	<delete id="deleteNoticeAcceptedFriendAdd" parameterType="Map">
		delete from notice
		where id = #{id} and
				friend_id = #{friendId} and
				level = 1				
	</delete>

	<resultMap id="notice-resultmap" type="Notice">
		<id property="id" column="id" />
		<result property="friendId" column="friend_id" />
		<result property="no" column="no" />
		<result property="contents" column="contents" />
		<result property="createDate" column="create_date" />
		<result property="level" column="level" />
	</resultMap>

	<select id="selectNotices" resultMap="notice-resultmap">
		select
			id,
			friend_id,
			no,
			contents,
			create_date,
			level
		from notice
	</select>

	<select id="selectNotice" parameterType="long" resultMap="notice-resultmap">
		select
			id,
			friend_id,
			no,
			contents,
			create_date,
			level
		from notice
		where id = #{value}
	</select>
	
	<select id="selectNoticeFriendAddById" parameterType="long" resultMap = "notice-resultmap">
		select
			id,
			friend_id,
			no,
			contents,
			create_date,
			level
		from notice
		where id = #{value} and level = 1
	</select>
	
	<select id="selectNoticeById" parameterType="long" resultMap = "notice-resultmap">
		select
			id,
			friend_id,
			no,
			contents,
			create_date,
			level
		from notice
		where id = #{value}
		order by create_date desc
		limit 10		
	</select>




</mapper>